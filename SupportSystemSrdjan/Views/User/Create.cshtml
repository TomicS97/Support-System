@model SupportSystemSrdjan.Models.UserViewModel

@{
    ViewBag.Title = "Create";
    var roles= ViewBag.Roles as List<SupportSystemSrdjan.Models.RolasViewModel>;
}

@using (Html.BeginForm())
{
    <div class="row">
        <div class="col-md-7">
            <h3>Create/Edit User</h3>
        </div>
        <div class="col-md-5">
            <div style="margin-left: 5%">
                <button type="button" class="btn w3-red a-btn-slide-text" onclick="location.href='@Url.Action("Index", "User")'">
                    <span class="glyphicon glyphicon-backward" aria-hidden="true"></span>
                    <span><strong>Back to list</strong></span>
                </button>
                <button href="#" type="submit" class="btn w3-red a-btn-slide-text">
                    <span class="glyphicon glyphicon-save" aria-hidden="true"></span>
                    <span><strong>Save</strong></span>
                </button>
            </div>
        </div>
    </div>

    @Html.AntiForgeryToken()
    <div class="col-md-10">
        <div class="form-horizontal">
            <br />
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <div class="form-group">
                @Html.LabelFor(model => model.FullName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.FullName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.FullName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Username, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Username, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Country, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Country, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Country, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10" id="Phone">
                    @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.RolesID, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.RolesID, ViewBag.Roles as List<SelectListItem>, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.RolesID, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Aktivan, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10" style="margin-top: 7px">
                    @Html.CheckBox("Aktivan",true)
                    @Html.ValidationMessageFor(model => model.Aktivan, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    </div>
}

@section scripts{
    <script type="text/javascript">
        $(document).ready(function () {
            jQuery.validator.addMethod('Phone', function (value, element) {
                if (element.value != 10 && element.value == isNaN) {
                    return false;
                }
                else {
                    return true;

                } 'Invalid phone number'
            });

            $('#Phone').validate({
                rules: {
                    phone: {
                        required: true,
                        phonenu: true,

                    }
                }
            });

        });
    </script>

}